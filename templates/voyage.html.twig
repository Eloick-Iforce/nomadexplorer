{% extends 'base.html.twig' %}
{% block title %}Parcours Etats-Unis
{% endblock
%}
{% block body %}
	<h1 class="text-white font-bold text-4xl mt-12 md:text-5xl">
		Parcours
		<span class="text-blueTitle">{{ voyage.title }}</span>
	</h1>
	<p class="mb-12 mt-2 text-lg text-gray-500">{{voyage.description}}</p>
	<div class="h-[557px] rounded-3xl full" id="map"></div>
	<h2 class="font-bold text-3xl mb-2 text-center mt-28 md:text-4xl">
		Plus
		<span class="gradient">d'infos</span>
	</h2>
	<p class="text-center text-base text-[#c2c2c2] -mt-2 md:text-md">
		Vous retrouvez les détails complet du voyage ci-dessus
	</p>

	<div class="flex flex-wrap justify-center gap-8 mt-8 md:gap-16 md:flex-row">
		<div class="bg-checkbox w-52 px-6 py-4 rounded-lg flex flex-col justify-center gap-[0.500rem] md:w-60">
			<div class="p-2 rounded-4xl">
				<img class="w-14 h-14 bg-[#368BEE] p-2 rounded-full mx-auto" src="{{ asset('images/moneybag.svg') }}" alt="image test"/>
			</div>
			<p class="font-bold text-5xl text-center lg:text-6xl">2454€</p>
			<p class="text-md text-center">Prix</p>
		</div>

		<div class="bg-checkbox w-52 px-6 py-4 rounded-lg flex flex-col justify-center gap-[0.500rem] md:w-60">
			<div class="p-2 rounded-4xl">
				<img class="w-14 h-14 bg-[#368BEE] p-2 rounded-full mx-auto" src="{{ asset('images/pin.svg') }}" alt="image test"/>
			</div>
			<p class="font-bold text-5xl text-center md:text-6xl">4</p>
			<p class="text-md text-center">Locations</p>
		</div>

		<div class="bg-checkbox w-52 px-6 py-4 rounded-lg flex flex-col justify-center gap-[0.500rem] md:w-60">
			<div class="p-2 rounded-4xl">
				<img class="w-14 h-14 bg-[#368BEE] p-2 rounded-full mx-auto" src="{{ asset('images/clock.svg') }}" alt="image test"/>
			</div>
			<p class="font-bold text-5xl text-center md:text-6xl">14</p>
			<p class="text-md text-center">Jours</p>
		</div>

		<div class="bg-checkbox w-52 px-6 py-4 rounded-lg flex flex-col justify-center gap-[0.500rem] md:w-60">
			<div class="p-2 rounded-4xl">
				<img class="w-14 h-14 bg-[#368BEE] p-2 rounded-full mx-auto" src="{{ asset('images/person.svg') }}" alt="image test"/>
			</div>
			<p class="font-bold text-5xl text-center md:text-6xl">4</p>
			<p class="text-md text-center">Personnes</p>
		</div>
	</div>

	<h1 class="font-bold text-4xl mt-40 mb-14 md:text-5xl">Commentaires</h1>
	{% for commentaire in voyage.commentaires %}
	<div class="flex flex-col gap-11">
		<div class="relative -z-10">
			<div class="absolute -inset-1 commentaire-bg"></div>
			<div class="relative flex p-2 items-center bg-checkbox rounded-xl md:p-3">
				<img class="w-44 h-44 rounded-lg" src="{{ asset('images/commentaire.png') }}" alt="image test"/>
				<div class="ml-4">
					<p class="text-base font-extralight md:pr-24 lg:text-[22px]">
						<span class="font-bold">“</span>{{ commentaire.contenu}}<span class="font-bold">”</span>
					</p>
					<p class="font-bold mt-2 text-sm md:text-lg md:mt-4">{{ commentaire.user.pseudo }}</p>
				</div>
			</div>
		</div>
	</div>
	{% else %}
	<p class="font-light mt-2 text-sm md:text-lg md:mt-4">Aucun commentaire</p>
	{% endfor %}



	<h1 class="font-bold text-4xl mt-40 mb-12 md:text-5xl">
		Ajoutez un commentaire !
	</h1>
    <div class="mb-28">
        <form class="min-h-[221px]" action="{{ path('app_voyage_commentaire', {'id': voyage.id}) }}" method="POST">
            <label class="font-bold mb-2 ml-2">Message*</label>
            {{ form_row(form.contenu, {'label': false}) }}
            {{ form_widget(form._token) }}
            <button type="submit" class="w-56 h-12 btn-gradient font-semibold inline mt-10">
                Ajouter
            </button>
        </form>
    </div>


	<script>
		{% if points is not empty %}
		var points = {{ points|json_encode|raw }};
		console.log(points);
		{% else %}
		var points = [];
		{% endif %}

		function initMap() {
			var map = new google.maps.Map(document.getElementById("map"), {
				zoom: 2,
				center: {
					lat: 0,
					lng: 0
				}
			});
			
			var bounds = new google.maps.LatLngBounds(); // Nouvel objet bounds
			var waypoints = []; // Tableau des waypoints

			for (var i = 0; i < points.length; i++) {
				var marker = new google.maps.Marker({
					position: {
						lat: points[i].lat,
						lng: points[i].lng
					},
					map: map
				});

				bounds.extend(marker.getPosition()); // Ajout du marker aux limites de l'objet bounds
				waypoints.push({location: marker.getPosition()}); // Ajout du waypoint au tableau
			}

			var directionsService = new google.maps.DirectionsService();
			var directionsRenderer = new google.maps.DirectionsRenderer();
			directionsRenderer.setMap(map);

			// Options de l'itinéraire
			var request = {
				origin: waypoints[0].location,
				destination: waypoints[waypoints.length - 1].location,
				waypoints: waypoints.slice(1, waypoints.length - 1),
				optimizeWaypoints: true,
				travelMode: google.maps.TravelMode.DRIVING
			};

			// Calcul de l'itinéraire
			directionsService.route(request, function(result, status) {
				if (status == google.maps.DirectionsStatus.OK) {
					directionsRenderer.setDirections(result);
				}
			});

			map.fitBounds(bounds); // Ajustement de la carte aux limites de l'objet bounds
		}

		window.onload = function () {
			initMap();
		};
	</script>

{% endblock %}
